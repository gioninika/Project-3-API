// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project.Data;

#nullable disable

namespace Project.Migrations
{
    [DbContext(typeof(ProjectDbContext))]
    [Migration("20250326200519_6")]
    partial class _6
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Project.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<int?>("ShopingCartId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ShopingCartId")
                        .IsUnique()
                        .HasFilter("[ShopingCartId] IS NOT NULL");

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("Project.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("OrderDate")
                        .HasColumnType("date");

                    b.Property<int?>("ShopingCartId")
                        .HasColumnType("int");

                    b.Property<double>("TotalAmount")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ShopingCartId");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("Project.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("ShopingCartId")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ShopingCartId");

                    b.ToTable("Product", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "High-performance laptop",
                            Name = "Laptop",
                            Price = 1200.5,
                            Stock = 10
                        },
                        new
                        {
                            Id = 2,
                            Description = "Latest model smartphone",
                            Name = "Smartphone",
                            Price = 899.99000000000001,
                            Stock = 15
                        },
                        new
                        {
                            Id = 3,
                            Description = "Noise-canceling headphones",
                            Name = "Headphones",
                            Price = 199.99000000000001,
                            Stock = 30
                        },
                        new
                        {
                            Id = 4,
                            Description = "Fitness tracking smartwatch",
                            Name = "Smartwatch",
                            Price = 249.99000000000001,
                            Stock = 20
                        },
                        new
                        {
                            Id = 5,
                            Description = "RGB gaming mouse",
                            Name = "Gaming Mouse",
                            Price = 49.990000000000002,
                            Stock = 50
                        });
                });

            modelBuilder.Entity("Project.Models.ShopingCart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("ShoppingCart", (string)null);
                });

            modelBuilder.Entity("Project.Models.Customer", b =>
                {
                    b.HasOne("Project.Models.ShopingCart", "ShopingCart")
                        .WithOne("Customer")
                        .HasForeignKey("Project.Models.Customer", "ShopingCartId")
                        .HasConstraintName("FK_Customer_ShoppingCart_ShopingCartId");

                    b.Navigation("ShopingCart");
                });

            modelBuilder.Entity("Project.Models.Order", b =>
                {
                    b.HasOne("Project.Models.ShopingCart", "ShopingCart")
                        .WithMany("Orders")
                        .HasForeignKey("ShopingCartId")
                        .HasConstraintName("FK_Order_ShoppingCart_ShopingCartId");

                    b.Navigation("ShopingCart");
                });

            modelBuilder.Entity("Project.Models.Product", b =>
                {
                    b.HasOne("Project.Models.ShopingCart", "ShopingCart")
                        .WithMany("Products")
                        .HasForeignKey("ShopingCartId")
                        .HasConstraintName("FK_Product_ShoppingCart_ShopingCartId");

                    b.Navigation("ShopingCart");
                });

            modelBuilder.Entity("Project.Models.ShopingCart", b =>
                {
                    b.Navigation("Customer")
                        .IsRequired();

                    b.Navigation("Orders");

                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
